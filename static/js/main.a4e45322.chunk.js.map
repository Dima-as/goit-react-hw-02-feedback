{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Notification/Notification.jsx","Components/Statistics/Statistics.jsx","App.js","index.js","Components/FeedbackOptions/FeedbackOptions.module.scss","Components/Section/Section.module.scss"],"names":["Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","option","Object","keys","list","map","btn","item","type","onClick","name","Notification","Statistics","good","neutral","bad","total","positiveFedback","App","state","handleIncreament","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAaeA,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,6BAAKJ,IACJC,M,gBCmBQI,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAASC,OAAOC,KAAKJ,GAC3B,OACE,oBAAIJ,UAAWC,IAAEQ,KAAjB,SACGH,EAAOI,KAAI,SAACC,GAAD,OACV,oBAAcX,UAAWC,IAAEW,KAA3B,SACE,wBACEC,KAAK,SACLC,QAAST,EACTU,KAAMJ,EACNX,UAAWC,IAAEU,IAJf,SAMGA,KAPIA,SCJFK,EAHM,WACnB,OAAO,uDC2BMC,EA1BI,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAC/C,OACE,qCACE,4CACW,IAAVD,EACC,cAAC,EAAD,IAEA,8BACE,+BACE,uCAAUH,KACV,2CAAcC,KACd,sCAASC,KACT,wCAAWC,KACX,mDAAsBC,EAAtB,gBCTNC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPK,iBAAmB,SAACC,GAClB,IAAQX,EAASW,EAAEC,OAAXZ,KACR,EAAKa,UAAS,SAACC,GAAD,sBAAmBd,EAAOc,EAAUd,GAAQ,O,EAE5De,mBAAqB,WACnB,OAAO,EAAKN,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAG3DW,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKT,MAAMN,KAAO,EAAKY,qBAAwB,M,4CAEpE,WACE,MAA+BI,KAAKV,MAA5BJ,EAAR,EAAQA,IAAKF,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,QACnB,OACE,eAAC,EAAD,CAASrB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEM,QAAS8B,KAAKV,MACdnB,gBAAiB6B,KAAKT,mBAExB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKJ,qBACZR,gBAAiBY,KAAKH,2C,GA9BdI,aAqCHZ,ICtCfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,IAAM,+B,kBCAlGD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.a4e45322.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.scss\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.scss\";\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const option = Object.keys(options);\r\n  return (\r\n    <ul className={s.list}>\r\n      {option.map((btn) => (\r\n        <li key={btn} className={s.item}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n            name={btn}\r\n            className={s.btn}\r\n          >\r\n            {btn}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","const Notification = () => {\r\n  return <h3>There is no feedback</h3>;\r\n};\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\nconst Statistics = ({ good, neutral, bad, total, positiveFedback }) => {\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      {total === 0 ? (\r\n        <Notification />\r\n      ) : (\r\n        <div>\r\n          <ul>\r\n            <li>Good:{good}</li>\r\n            <li>Neutaral:{neutral}</li>\r\n            <li>Bad:{bad}</li>\r\n            <li>Total:{total}</li>\r\n            <li>Positive fedback:{positiveFedback}%</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport Section from \"./Components/Section/Section\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\n\nimport Statistics from \"./Components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleIncreament = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n  render() {\n    const { bad, good, neutral } = this.state;\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.handleIncreament}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positiveFedback={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__32oCP\",\"item\":\"FeedbackOptions_item__3HlzD\",\"btn\":\"FeedbackOptions_btn__3Jz-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Wwer\"};"],"sourceRoot":""}